{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "An AWS Serverless Application.",
  "Mappings" : {
    "Functions" : {
				"GetFunction" : {"Ref" : "Get"},
				"ProcessSpectrumContoller" : {"Ref" : "ProcessSpectrumContoller"}
	}
  },

    "Parameters": {
    "ReadCapacityUnits": {
      "Description": "Provisioned read throughput",
      "Type": "Number",
      "Default": "5",
      "MinValue": "1",
      "MaxValue": "10",
      "ConstraintDescription": "must be between 5 and 10000"
    },

    "WriteCapacityUnits": {
      "Description": "Provisioned write throughput",
      "Type": "Number",
      "Default": "5",
      "MinValue": "1",
      "MaxValue": "10",
      "ConstraintDescription": "must be between 5 and 10000"
    }
  },


  "Resources" : {


	"OnNewDBRecord" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
	    "Description" : "Built by Serverless CloudFormation [Michael]",
        "Handler": "SignalDetectionServices::SignalDetectionServices.Functions::OnNewDBRecordLambda",
        "Runtime": "dotnetcore1.0",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
		"Environment" : { "Variables" : 
			{
				"DDBTableName" : { "Ref" : "DDBTable" },
				"SNSTopicARN" : { "Ref" : "ProcessingStatusSNS"}
			}
		},
        "Policies": [ "AWSLambdaExecute" , "AmazonDynamoDBFullAccess","AmazonSNSFullAccess"]
	   }
    },

	"EventStreamMap" :
	{
	"Type" : "AWS::Lambda::EventSourceMapping",
     "Properties" : {
		"BatchSize" : 5000,
		"Enabled" : true,
		"EventSourceArn" : { "Fn::GetAtt" : ["DDBTable", "StreamArn"] } ,
		"FunctionName" : { "Fn::GetAtt" : ["OnNewDBRecord", "Arn"] },
		"StartingPosition" : "TRIM_HORIZON"
		}
	},



	"ProcessSpectrumContoller" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
	  	"Description" : "Built by Serverless CloudFormation [Michael]",
        "Handler": "SignalDetectionServices::SignalDetectionServices.Functions::ProcessSpectrumContollerLambda",
        "Runtime": "dotnetcore1.0",
        "CodeUri": "",
        "MemorySize": 1024,
        "Timeout": 200,
		"Environment" : { "Variables" : 
			{
				"DDBTableName" : { "Ref" : "DDBTable" },
				"SNSTopicARN" : { "Ref" : "ProcessingStatusSNS"}
			}
		},
		"Policies": [ "AWSLambdaFullAccess","AmazonS3ReadOnlyAccess" ]
      }
    },

	"ProcessSpectra" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
	  	"Description" : "Built by Serverless CloudFormation [Michael]",
        "Handler": "SignalDetectionServices::SignalDetectionServices.Functions::ProcessSpectraAsyncLambda",
        "Runtime": "dotnetcore1.0",
        "CodeUri": "",
        "MemorySize": 1024,
        "Timeout": 300,
		"Policies": [ "AWSLambdaFullAccess","AmazonS3ReadOnlyAccess" ],
		"Environment" : { "Variables" : 
			{
				"ProcessSpectrumContoller" : {"Ref" : "ProcessSpectrumContoller"},
				"SNSTopicARN" : { "Ref" : "ProcessingStatusSNS"},
				"DDBTableName" : { "Ref" : "DDBTable" }
			}
		}
      }
    },
    "ProcessingStatusSNS" :
	{
       "Type" : "AWS::SNS::Topic",
       "Properties" : {
       "DisplayName" : "ProcessingStatus",
       "Subscription" : [ { "Endpoint" : { "Fn::GetAtt" : [ "ProcessingStatusSQS", "Arn" ] }, "Protocol" : "sqs" } ],
       "TopicName" : "ProcessingStatus"
     }
    },

	"ProcessingStatusSQS":{
      "Type":"AWS::SQS::Queue"
    },

	"DDBTable" :
	{
	  "Type" : "AWS::DynamoDB::Table",
	  "Properties": {
	  		"StreamSpecification" : { "StreamViewType" : "KEYS_ONLY"},


        "AttributeDefinitions": [
          { "AttributeName": "id", "AttributeType": "S" },
          { "AttributeName": "scan", "AttributeType": "S" }
        ],
        "KeySchema": [
          { "AttributeName": "id", "KeyType": "HASH" },
          { "AttributeName": "scan", "KeyType": "RANGE" }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": { "Ref": "ReadCapacityUnits" },
          "WriteCapacityUnits": { "Ref": "WriteCapacityUnits" }
        }
       
        
      }
}


  },

  "Outputs" : 
  {
	     "TableName" : {
         "Value" : {"Ref" : "DDBTable"}

     }
  }
}